{"version":3,"file":"static/js/379.8c429af3.chunk.js","mappings":"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","sources":["components/AlertMessage.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js","components/Signup.js","firebase.config.js","server/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Alert, AlertIcon, AlertTitle, CloseButton } from '@chakra-ui/react';\r\n\r\nconst AlertMessage = ({ message, handleClose }) => {\r\n    return (\r\n        <div style={{ marginTop: '30px', borderRadius: '10px' }}>\r\n            <Alert status=\"error\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>{message}</AlertTitle>\r\n                {/* <AlertDescription>\r\n                    Your Chakra experience may be degraded.\r\n                </AlertDescription> */}\r\n                <CloseButton\r\n                    onClick={handleClose}\r\n                    position=\"absolute\"\r\n                    right=\"8px\"\r\n                    top=\"8px\"\r\n                />\r\n            </Alert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlertMessage;\r\n","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, useEffect, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isInitialRender = useRef(true);\n    var isMounted = useRef(true);\n    useEffect(function () { return function () {\n        isMounted.current = false;\n    }; }, []);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false) {\n                    return;\n                }\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useRef, useState, useCallback } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.mjs';\n\nfunction useForceUpdate() {\n    var isUnmountingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (isUnmountingRef.current = true); });\n    var forceRender = useCallback(function () {\n        !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { isInputEvent, addItem, removeItem, __DEV__, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : removeItem(value, selectedValue);\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.includes(props.value), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"onChange\", \"isIndeterminate\", \"isInvalid\", \"name\", \"value\", \"id\", \"onBlur\", \"onFocus\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\", \"aria-describedby\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      isDisabled = _props.isDisabled,\n      isReadOnly = _props.isReadOnly,\n      isRequired = _props.isRequired,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      isInvalid = _props.isInvalid,\n      name = _props.name,\n      value = _props.value,\n      id = _props.id,\n      onBlur = _props.onBlur,\n      onFocus = _props.onFocus,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      ariaDescribedBy = _props[\"aria-describedby\"],\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  return {\n    state: {\n      isInvalid: isInvalid,\n      isFocused: isFocused,\n      isChecked: isChecked,\n      isActive: isActive,\n      isHovered: isHovered,\n      isIndeterminate: isIndeterminate,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      isRequired: isRequired\n    },\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    VStack,\r\n    Button,\r\n    Heading,\r\n    InputGroup,\r\n    InputRightElement,\r\n    useMediaQuery,\r\n} from '@chakra-ui/react';\r\nimport BarLoader from 'react-spinners/BarLoader';\r\nimport AlertMessage from './AlertMessage';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth, registerUserWithEmailAndPassword } from '../server';\r\nimport '../App.css';\r\n\r\nconst Signup = ({ formValue, setFormValue }) => {\r\n    const navigate = useNavigate();\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [isAllField, setIsAllField] = useState(false);\r\n    const [alert, setAlert] = useState({ message: '', visible: false });\r\n    const [isResponsive] = useMediaQuery('(min-width: 1000px)');\r\n\r\n    useEffect(() => {\r\n        if (\r\n            formValue.firstName !== '' &&\r\n            formValue.lastName !== '' &&\r\n            formValue.email !== '' &&\r\n            formValue.password !== '' &&\r\n            formValue.checkbox === true\r\n        )\r\n            setIsAllField(true);\r\n        else setIsAllField(false);\r\n    }, [formValue]);\r\n\r\n    useEffect(() => {\r\n        if (user) navigate('/home', { replace: true });\r\n    }, [loading, user]);\r\n\r\n    const handleSignupForm = () => {\r\n        const error = registerUserWithEmailAndPassword(formValue);\r\n        // user.displayName = formValue.firstName + ' ' + formValue.lastName;\r\n        error.then(errorMessage =>\r\n            setAlert({ visible: true, message: errorMessage })\r\n        );\r\n        setFormValue({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            checkbox: false,\r\n        });\r\n    };\r\n\r\n    if (loading) return <BarLoader />;\r\n\r\n    return (\r\n        <div\r\n            className=\"user-information\"\r\n            style={{ width: isResponsive ? '400px' : 'auto' }}\r\n        >\r\n            {alert.visible && (\r\n                <AlertMessage\r\n                    message={alert.message}\r\n                    handleClose={() =>\r\n                        setAlert({ visible: false, message: '' })\r\n                    }\r\n                />\r\n            )}\r\n            <Heading\r\n                className=\"signup-heading\"\r\n                style={{\r\n                    marginBottom: '30px',\r\n                    marginTop: alert.visible && '30px',\r\n                }}\r\n            >\r\n                Registration form\r\n            </Heading>\r\n            <FormControl isRequired>\r\n                <VStack spacing={4} align=\"stretch\">\r\n                    <div>\r\n                        <FormLabel htmlFor=\"first-name\">First name</FormLabel>\r\n                        <Input\r\n                            id=\"first-name\"\r\n                            placeholder=\"First name\"\r\n                            type={'text'}\r\n                            value={formValue.firstName}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    firstName: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <FormLabel htmlFor=\"last-name\">Last name</FormLabel>\r\n                        <Input\r\n                            id=\"last-name\"\r\n                            placeholder=\"last name\"\r\n                            type={'text'}\r\n                            value={formValue.lastName}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    lastName: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                        <InputGroup size=\"md\">\r\n                            <Input\r\n                                pr=\"4.5rem\"\r\n                                type={'email'}\r\n                                placeholder=\"Email\"\r\n                                value={formValue.email}\r\n                                onChange={e =>\r\n                                    setFormValue({\r\n                                        ...formValue,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                            <InputRightElement width=\"4.5rem\">\r\n                                <Button\r\n                                    h=\"1.75rem\"\r\n                                    size=\"sm\"\r\n                                    colorScheme={'blue'}\r\n                                    // onClick={verifyEmailId}\r\n                                >\r\n                                    Verify\r\n                                </Button>\r\n                            </InputRightElement>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div>\r\n                        <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                        <Input\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            type={'password'}\r\n                            value={formValue.password}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    password: e.target.value,\r\n                                })\r\n                            }\r\n                            password\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <FormLabel htmlFor=\"checkbox\">Terms</FormLabel>\r\n                        <Checkbox\r\n                            id=\"checkbox\"\r\n                            value={formValue.checkbox}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    checkbox: e.target.checked,\r\n                                })\r\n                            }\r\n                        >\r\n                            I am accepting all term and condition\r\n                        </Checkbox>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            disabled={!isAllField}\r\n                            colorScheme=\"blue\"\r\n                            onClick={handleSignupForm}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        Have already an account?{' '}\r\n                        <Link\r\n                            to={'/login'}\r\n                            style={{\r\n                                color: 'blue',\r\n                                textDecoration: 'underline',\r\n                            }}\r\n                        >\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </VStack>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_API_ID,\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\n","import { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\r\nimport { addDoc, collection, getFirestore } from 'firebase/firestore';\r\nimport { app } from '../firebase.config';\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport const registerUserWithEmailAndPassword = async data => {\r\n    try {\r\n        const { firstName, lastName, email, password, checkbox } = data;\r\n        const response = await createUserWithEmailAndPassword(\r\n            auth,\r\n            email,\r\n            password\r\n        );\r\n        const user = response.user;\r\n        await addDoc(collection(db, 'users'), {\r\n            _id: user.uid,\r\n            name: firstName + ' ' + lastName,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            authType: 'e&p',\r\n            termsAcceptation: checkbox,\r\n        });\r\n    } catch (error) {\r\n        console.log('error', error.message);\r\n        return error.message;\r\n    }\r\n};\r\n\r\nexport const stringDate = type => {\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth();\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n    const monthArray = [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n    ];\r\n    return `${type === 'c' ? 'created' : 'updated'} at ${day} ${\r\n        monthArray[month]\r\n    }, ${year}`;\r\n};\r\n"],"names":["message","handleClose","style","marginTop","borderRadius","status","mr","onClick","position","right","top","presenceId","getPresenceId","id","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","e_1","set","_b","__values","values","_c","next","done","value","e_1_1","error","return","call","register","delete","undefined","forEach","_","key","React","size","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","_d","__read","isUnmountingRef","useRef","useState","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","isInitialRender","isMounted","useEffect","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","apply","this","_createContext","createContext","name","strict","useCheckboxGroupContext","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","__DEV__","_excluded$2","MotionSvg","motion","chakra","CheckIcon","props","width","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest","IconEl","_excluded$1","stopEvent","event","preventDefault","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","_disabled","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","isDisabled","onChangeProp","onChange","includes","callAll","_useCheckbox","_props","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","isReadOnly","isRequired","isInvalid","onBlur","onFocus","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","ariaDescribedBy","htmlProps","useCallbackRef","onBlurProp","onFocusProp","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","_useState","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","warn","condition","handleChange","useSafeLayoutEffect","indeterminate","Boolean","useUpdateEffect","off","trulyDisabled","onKeyDown","on","onKeyUp","getCheckboxProps","forwardedRef","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","_inputRef$current","click","focus","nextTick","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","onTouchStart","state","useCheckbox","iconStyles","transform","fontSize","color","clonedIcon","__css","container","cx","control","marginStart","label","displayName","formValue","setFormValue","navigate","useNavigate","useAuthState","auth","user","loading","isAllField","setIsAllField","visible","alert","setAlert","useMediaQuery","isResponsive","firstName","lastName","email","password","checkbox","replace","AlertMessage","marginBottom","align","htmlFor","placeholder","e","pr","h","colorScheme","registerUserWithEmailAndPassword","then","errorMessage","to","textDecoration","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","data","createUserWithEmailAndPassword","response","addDoc","collection","_id","uid","authType","termsAcceptation","console","log","stringDate","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear"],"sourceRoot":""}