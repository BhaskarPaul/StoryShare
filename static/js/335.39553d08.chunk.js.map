{"version":3,"file":"static/js/335.39553d08.chunk.js","mappings":"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","sources":["components/AlertMessage.js","components/Login.js","firebase.config.js","server/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Alert, AlertIcon, AlertTitle, CloseButton } from '@chakra-ui/react';\r\n\r\nconst AlertMessage = ({ message, handleClose }) => {\r\n    return (\r\n        <div style={{ marginTop: '30px', borderRadius: '10px' }}>\r\n            <Alert status=\"error\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>{message}</AlertTitle>\r\n                {/* <AlertDescription>\r\n                    Your Chakra experience may be degraded.\r\n                </AlertDescription> */}\r\n                <CloseButton\r\n                    onClick={handleClose}\r\n                    position=\"absolute\"\r\n                    right=\"8px\"\r\n                    top=\"8px\"\r\n                />\r\n            </Alert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlertMessage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    VStack,\r\n    Button,\r\n    Heading,\r\n    HStack,\r\n    useMediaQuery,\r\n} from '@chakra-ui/react';\r\nimport AlertMessage from './AlertMessage';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth, db } from '../server';\r\nimport { BarLoader } from 'react-spinners';\r\nimport '../App.css';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst Login = ({ formValue, setFormValue }) => {\r\n    const navigate = useNavigate();\r\n    const [isAllField, setIsAllField] = useState(false);\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [alert, setAlert] = useState({ message: '', visible: false });\r\n    const [isResponsive] = useMediaQuery('(min-width: 1000px)');\r\n\r\n    useEffect(() => {\r\n        if (formValue.email !== '' && formValue.password !== '')\r\n            setIsAllField(true);\r\n        else setIsAllField(false);\r\n    }, [formValue]);\r\n\r\n    useEffect(() => {\r\n        if (user) return navigate('/home', { replace: true });\r\n    }, [user]);\r\n\r\n    if (loading) <BarLoader />;\r\n\r\n    const handleLoginForm = async () => {\r\n        try {\r\n            const response = await signInWithEmailAndPassword(\r\n                auth,\r\n                formValue.email,\r\n                formValue.password\r\n            );\r\n            // console.log(response.user.uid);\r\n            // const snapshot = await getDoc(doc(db, 'users', response.user.uid));\r\n            // // user.displayName = snapshot.data().name;\r\n            // // console.log(user);\r\n            // console.log(snapshot.data());\r\n            setFormValue({\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                checkbox: false,\r\n            });\r\n        } catch (error) {\r\n            setAlert({ visible: true, message: error.message });\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"user-information\"\r\n            style={{ width: isResponsive ? '400px' : 'auto' }}\r\n        >\r\n            {alert.visible && (\r\n                <AlertMessage\r\n                    message={alert.message}\r\n                    handleClose={() =>\r\n                        setAlert({ visible: false, message: '' })\r\n                    }\r\n                />\r\n            )}\r\n            <Heading\r\n                className=\"login-heading\"\r\n                style={{\r\n                    marginBottom: '30px',\r\n                    marginTop: alert.visible && '30px',\r\n                }}\r\n            >\r\n                Login form\r\n            </Heading>\r\n            <FormControl isRequired>\r\n                <VStack spacing={4} align=\"stretch\">\r\n                    <div>\r\n                        <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                        <Input\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            type={'email'}\r\n                            value={formValue.email}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    email: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                        <Input\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            type={'password'}\r\n                            value={formValue.password}\r\n                            onChange={e =>\r\n                                setFormValue({\r\n                                    ...formValue,\r\n                                    password: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            disabled={!isAllField && true}\r\n                            colorScheme=\"blue\"\r\n                            onClick={handleLoginForm}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                    <HStack justify={'space-between'}>\r\n                        <div>\r\n                            Have not signed up?{' '}\r\n                            <Link\r\n                                to={'/signup'}\r\n                                style={{\r\n                                    color: 'blue',\r\n                                    textDecoration: 'underline',\r\n                                }}\r\n                            >\r\n                                Create an account\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link\r\n                                to={'/forgot'}\r\n                                style={{\r\n                                    color: 'blue',\r\n                                    textDecoration: 'underline',\r\n                                }}\r\n                            >\r\n                                Forgot Password\r\n                            </Link>\r\n                        </div>\r\n                    </HStack>\r\n                </VStack>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_API_ID,\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\n","import { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\r\nimport { addDoc, collection, getFirestore } from 'firebase/firestore';\r\nimport { app } from '../firebase.config';\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport const registerUserWithEmailAndPassword = async data => {\r\n    try {\r\n        const { firstName, lastName, email, password, checkbox } = data;\r\n        const response = await createUserWithEmailAndPassword(\r\n            auth,\r\n            email,\r\n            password\r\n        );\r\n        const user = response.user;\r\n        await addDoc(collection(db, 'users'), {\r\n            _id: user.uid,\r\n            name: firstName + ' ' + lastName,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            authType: 'e&p',\r\n            termsAcceptation: checkbox,\r\n        });\r\n    } catch (error) {\r\n        console.log('error', error.message);\r\n        return error.message;\r\n    }\r\n};\r\n\r\nexport const stringDate = type => {\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth();\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n    const monthArray = [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n    ];\r\n    return `${type === 'c' ? 'created' : 'updated'} at ${day} ${\r\n        monthArray[month]\r\n    }, ${year}`;\r\n};\r\n"],"names":["message","handleClose","style","marginTop","borderRadius","status","mr","onClick","position","right","top","formValue","setFormValue","navigate","useNavigate","useState","isAllField","setIsAllField","useAuthState","auth","user","loading","visible","alert","setAlert","useMediaQuery","isResponsive","useEffect","email","password","replace","BarLoader","handleLoginForm","signInWithEmailAndPassword","firstName","lastName","checkbox","console","log","className","width","marginBottom","isRequired","spacing","align","htmlFor","id","placeholder","type","value","onChange","e","target","disabled","colorScheme","justify","to","color","textDecoration","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","registerUserWithEmailAndPassword","data","createUserWithEmailAndPassword","response","addDoc","collection","_id","uid","name","authType","termsAcceptation","stringDate","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear"],"sourceRoot":""}