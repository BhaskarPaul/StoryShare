{"version":3,"file":"static/js/675.28ba43c5.chunk.js","mappings":"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","sources":["components/Navbar.js","components/UserProfile.js","firebase.config.js","server/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {\r\n    Stack,\r\n    Heading,\r\n    HStack,\r\n    Button,\r\n    Avatar,\r\n    Popover,\r\n    PopoverTrigger,\r\n    Portal,\r\n    PopoverContent,\r\n    PopoverArrow,\r\n    PopoverHeader,\r\n    PopoverCloseButton,\r\n    PopoverBody,\r\n    useMediaQuery,\r\n} from '@chakra-ui/react';\r\nimport { BarLoader } from 'react-spinners';\r\nimport { signOut } from 'firebase/auth';\r\nimport { useLocation, useNavigate, NavLink } from 'react-router-dom';\r\nimport { auth } from '../server';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { AiOutlineMenu, AiFillCloseCircle } from 'react-icons/ai';\r\n\r\nconst Navbar = ({ userData }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [isResponsive] = useMediaQuery('(min-width: 1000px)');\r\n    const [showNavbarModalInMobile, setShowNavbarModalInMobile] =\r\n        useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     // if (!user) {\r\n    //     //     if (location.pathname === '/home') navigate('/login');\r\n    //     //     if (loading.pathname === '/feed') navigate('/login');\r\n    //     // }\r\n    //     console.log(location.pathname);\r\n    // }, [user]);\r\n\r\n    if (loading) return <BarLoader />;\r\n\r\n    const handleSignOut = async () => {\r\n        await signOut(auth);\r\n        navigate('/login', { replace: true });\r\n    };\r\n\r\n    const handleResponsiveMenuBar = {\r\n        openMenu: () => setShowNavbarModalInMobile(true),\r\n        closeMenu: () => setShowNavbarModalInMobile(false),\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <HStack justify={'space-between'}>\r\n                <NavLink to={'/home'}>\r\n                    {' '}\r\n                    <Heading className=\"navbar-heading\">StoryShare</Heading>\r\n                </NavLink>\r\n                {isResponsive ? (\r\n                    <div>\r\n                        <HStack spacing={10}>\r\n                            <NavLink\r\n                                to={'/home'}\r\n                                className={\r\n                                    (location.pathname === '/home' &&\r\n                                        'navbar-active') +\r\n                                    ' ' +\r\n                                    'navbar-link'\r\n                                }\r\n                            >\r\n                                Your Stories\r\n                            </NavLink>\r\n                            <NavLink\r\n                                to={'/feed'}\r\n                                className={\r\n                                    (location.pathname === '/feed' &&\r\n                                        'navbar-active') +\r\n                                    ' ' +\r\n                                    'navbar-link'\r\n                                }\r\n                            >\r\n                                Feed\r\n                            </NavLink>\r\n                            <Popover>\r\n                                <PopoverTrigger>\r\n                                    <HStack spacing={5} className=\"navbar-user\">\r\n                                        <p>{userData.name}</p>\r\n                                        <Avatar src=\"https://image.shutterstock.com/image-vector/young-man-face-cartoon-260nw-1224888760.jpg\" />\r\n                                    </HStack>\r\n                                </PopoverTrigger>\r\n                                <Portal>\r\n                                    <PopoverContent className=\"navbar-user-portal\">\r\n                                        <PopoverArrow />\r\n                                        <PopoverHeader>\r\n                                            Your Profile\r\n                                        </PopoverHeader>\r\n                                        <PopoverCloseButton />\r\n                                        <PopoverBody>\r\n                                            <HStack>\r\n                                                <p>{userData.email}</p>\r\n                                                <Button\r\n                                                    colorScheme=\"orange\"\r\n                                                    onClick={handleSignOut}\r\n                                                >\r\n                                                    Sign Out\r\n                                                </Button>\r\n                                            </HStack>\r\n                                        </PopoverBody>\r\n                                    </PopoverContent>\r\n                                </Portal>\r\n                            </Popover>\r\n                        </HStack>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {showNavbarModalInMobile ? (\r\n                            <AiFillCloseCircle\r\n                                onClick={handleResponsiveMenuBar.closeMenu}\r\n                            />\r\n                        ) : (\r\n                            <AiOutlineMenu\r\n                                onClick={handleResponsiveMenuBar.openMenu}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </HStack>\r\n            {showNavbarModalInMobile && (\r\n                <div className=\"responsive-navbar\">\r\n                    <Stack spacing={5}>\r\n                        <NavLink\r\n                            to={'/home'}\r\n                            className={\r\n                                (location.pathname === '/home' &&\r\n                                    'navbar-active') +\r\n                                ' ' +\r\n                                'navbar-link'\r\n                            }\r\n                        >\r\n                            Your Stories\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to={'/feed'}\r\n                            className={\r\n                                (location.pathname === '/feed' &&\r\n                                    'navbar-active') +\r\n                                ' ' +\r\n                                'navbar-link'\r\n                            }\r\n                        >\r\n                            Feed\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to=\"/profile\"\r\n                            className={\r\n                                (location.pathname === '/profile' &&\r\n                                    'navbar-active') +\r\n                                ' ' +\r\n                                'navbar-link'\r\n                            }\r\n                        >\r\n                            Your Profile\r\n                        </NavLink>\r\n                        {/* <Popover>\r\n                            <PopoverTrigger>\r\n                                <HStack spacing={5} className=\"navbar-user\">\r\n                                    <p>{userData.name}</p>\r\n                                    <Avatar src=\"https://image.shutterstock.com/image-vector/young-man-face-cartoon-260nw-1224888760.jpg\" />\r\n                                </HStack>\r\n                            </PopoverTrigger>\r\n                            <Portal>\r\n                                <PopoverContent className=\"navbar-user-portal\">\r\n                                    <PopoverArrow />\r\n                                    <PopoverHeader>Your Profile</PopoverHeader>\r\n                                    <PopoverCloseButton />\r\n                                    <PopoverBody>\r\n                                        <HStack>\r\n                                            <p>{userData.email}</p>\r\n                                            <Button\r\n                                                colorScheme=\"orange\"\r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                        </HStack>\r\n                                    </PopoverBody>\r\n                                </PopoverContent>\r\n                            </Portal>\r\n                        </Popover> */}\r\n                        <Button colorScheme=\"orange\" onClick={handleSignOut}>\r\n                            Sign Out\r\n                        </Button>\r\n                    </Stack>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { auth, db } from '../server';\r\nimport { getDocs, query, collection, where } from 'firebase/firestore';\r\nimport Navbar from './Navbar';\r\nimport {\r\n    VStack,\r\n    Avatar,\r\n    Heading,\r\n    Stack,\r\n    HStack,\r\n    Button,\r\n    Divider,\r\n    useMediaQuery,\r\n} from '@chakra-ui/react';\r\nimport '../App.css';\r\nimport { signOut } from 'firebase/auth';\r\n\r\nconst UserProfile = () => {\r\n    const navigate = useNavigate();\r\n    const [userData, setUserData] = useState({});\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [isResponsive] = useMediaQuery('(min-width: 1000px)');\r\n\r\n    useEffect(() => {\r\n        if (!user) navigate('/login', { replace: true });\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const fetchUserData = async () => {\r\n        try {\r\n            const docs = await getDocs(\r\n                query(collection(db, 'users'), where('_id', '==', user?.uid))\r\n            );\r\n            const data = await docs.docs[0].data();\r\n            setUserData(data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleSignOut = async () => {\r\n        await signOut(auth);\r\n        navigate('/login', { replace: true });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar userData={userData} />\r\n            <div>\r\n                <VStack>\r\n                    <Avatar\r\n                        size=\"2xl\"\r\n                        name={userData.name}\r\n                        // src=\"https://bit.ly/sage-adebayo\"\r\n                    />{' '}\r\n                    <Heading className=\"heading\">{userData.name}</Heading>\r\n                </VStack>\r\n                <Stack\r\n                    justifyContent={'center'}\r\n                    className=\"user-box\"\r\n                    width={isResponsive ? '400px' : 'auto'}\r\n                >\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <p>Name</p>\r\n                        <p>{userData.name}</p>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <p>Email</p>\r\n                        <p>{userData.email}</p>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <Button colorScheme={'blue'}>Edit Profile</Button>\r\n                        <Button colorScheme={'orange'} onClick={handleSignOut}>\r\n                            Log out\r\n                        </Button>\r\n                    </HStack>\r\n                </Stack>\r\n                <Stack\r\n                    justifyContent={'center'}\r\n                    className=\"user-box\"\r\n                    width={isResponsive ? '400px' : 'auto'}\r\n                >\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <p>Total Story(s) Uploaded</p>\r\n                        <p className=\"bold\">0</p>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <p>Total like(s)</p>\r\n                        <p className=\"bold\">0</p>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack justifyContent={'space-between'}>\r\n                        <p>Total view(s)</p>\r\n                        <p className=\"bold\">0</p>\r\n                    </HStack>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_API_ID,\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\n","import { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\r\nimport { addDoc, collection, getFirestore } from 'firebase/firestore';\r\nimport { app } from '../firebase.config';\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport const registerUserWithEmailAndPassword = async data => {\r\n    try {\r\n        const { firstName, lastName, email, password, checkbox } = data;\r\n        const response = await createUserWithEmailAndPassword(\r\n            auth,\r\n            email,\r\n            password\r\n        );\r\n        const user = response.user;\r\n        await addDoc(collection(db, 'users'), {\r\n            _id: user.uid,\r\n            name: firstName + ' ' + lastName,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            authType: 'e&p',\r\n            termsAcceptation: checkbox,\r\n        });\r\n    } catch (error) {\r\n        console.log('error', error.message);\r\n        return error.message;\r\n    }\r\n};\r\n\r\nexport const stringDate = type => {\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth();\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n    const monthArray = [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n    ];\r\n    return `${type === 'c' ? 'created' : 'updated'} at ${day} ${\r\n        monthArray[month]\r\n    }, ${year}`;\r\n};\r\n"],"names":["userData","navigate","useNavigate","location","useLocation","useAuthState","auth","loading","useMediaQuery","isResponsive","useState","showNavbarModalInMobile","setShowNavbarModalInMobile","BarLoader","handleSignOut","signOut","replace","handleResponsiveMenuBar","openMenu","closeMenu","className","justify","to","spacing","pathname","name","src","email","colorScheme","onClick","setUserData","user","useEffect","fetchUserData","getDocs","query","collection","db","where","uid","docs","data","console","error","size","justifyContent","width","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","registerUserWithEmailAndPassword","firstName","lastName","password","checkbox","createUserWithEmailAndPassword","response","addDoc","_id","authType","termsAcceptation","log","message","stringDate","type","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear"],"sourceRoot":""}